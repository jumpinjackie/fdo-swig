%module FdoDotNet

%include "wchar.i"

//SWIG is ref-counting aware, so let's take advantage of it!
%feature("ref") FdoIDisposable "FDO_SAFE_ADDREF($this);"
%feature("unref") FdoIDisposable "FDO_SAFE_RELEASE($this);"
%newobject *::Create;

//======= C#-specific ==========
//Make all classes partial, so we can customize said classes outside of swig
%typemap(csclassmodifiers) SWIGTYPE "public partial class"
typedef unsigned char FdoByte;
typedef short         FdoInt8;
typedef short         FdoInt16;
typedef int           FdoInt32;
typedef long long     FdoInt64;

%{
#include <vector>
#include "Fdo.h"

//FDO helper collections. Not in official FDO API
#include "BasicValueCollection.h"
#include "ClassTypeCollection.h"
#include "ConditionTypeCollection.h"
#include "DataTypeCollection.h"
#include "DistanceOperationsCollection.h"
#include "ExpressionTypeCollection.h"
#include "GeometryComponentTypeCollection.h"
#include "GeometryTypeCollection.h"
#include "Int32Collection.h"
#include "LockTypeCollection.h"
#include "SpatialOperationsCollection.h"
#include "SpatialContextExtentTypeCollection.h"

static std::string W2A_SLOW(const wchar_t* input)
{
    size_t wlen = wcslen(input);
    int mbslen = (int) wlen * 4 + 1;
    char* mbs = (char*)alloca(mbslen);
    wcstombs(mbs, input, mbslen);
    return std::string(mbs);
}

%}

%include "FdoCollections.i"
%include "FdoExceptions.i"
%include "../Common/FdoIgnore.i"

// These methods have been replaced with a more usable version for the languages 
// we want to expose in FdoMarshal.i below, so hide these original methods
%ignore FdoISchemaCapabilities::GetClassTypes;
%ignore FdoISchemaCapabilities::GetDataTypes;
%ignore FdoISchemaCapabilities::GetSupportedAutoGeneratedTypes;
%ignore FdoISchemaCapabilities::GetSupportedIdentityPropertyTypes;
%ignore FdoIFilterCapabilities::GetConditionTypes;
%ignore FdoIFilterCapabilities::GetSpatialOperations;
%ignore FdoIFilterCapabilities::GetDistanceOperations;
%ignore FdoIExpressionCapabilities::GetExpressionTypes;
%ignore FdoIGeometryCapabilities::GetGeometryComponentTypes;
%ignore FdoIGeometryCapabilities::GetGeometryTypes;
%ignore FdoIConnectionCapabilities::GetLockTypes;

%include "../Common/FdoIncludes.i"
%include "../Common/FdoMarshal.i"