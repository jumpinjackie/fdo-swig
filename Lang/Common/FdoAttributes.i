// FdoAttributes.i
//
// Attribute (Property) definitions
//
// NOTES:
//  Only non-pointer basic types and enums are wrapped as attributes
//  Pointer types are not wrapped as we are not certain if they will/won't affect %newobject behavior
//  FdoString* types are not wrapped

%include <attribute.i>

%attribute(FdoByteArrayHandle, FdoInt32, Length, GetLength);

%attribute(FdoArgumentDefinition, FdoDataType, DataType, GetDataType);
%attribute(FdoArgumentDefinition, FdoDataType, PropertyType, GetPropertyType);
//%attribute(FdoArgumentDefinition, FdoString*, Description, GetDescription);
//%attribute(FdoArgumentDefinition, FdoString*, Name, GetName);

//%attribute(FdoCollection, FdoInt32, Count, GetCount);

%attribute(FdoSchemaElement, FdoBoolean, CanSetName, CanSetName);
%attribute(FdoSchemaElement, FdoSchemaElementState, ElementState, GetElementState);
//%attribute(FdoSchemaElement, FdoSchemaElement*, Parent, GetParent);
//%attribute(FdoSchemaElement, FdoString*, Name, GetName, SetName);
//%attribute(FdoSchemaElement, FdoString*, Description, GetDescription, SetDescription);

%attribute(FdoPropertyDefinition, FdoBoolean, IsSystem, GetIsSystem, SetIsSystem);
%attribute(FdoPropertyDefinition, FdoPropertyType, PropertyType, GetPropertyType);

%attribute(FdoDataPropertyDefinition, FdoDataType, DataType, GetDataType, SetDataType)
//%attribute(FdoDataPropertyDefinition, FdoString*, DefaultValue, GetDefaultValue, SetDefaultValue);
%attribute(FdoDataPropertyDefinition, FdoBoolean, IsAutoGenerated, GetIsAutoGenerated, SetIsAutoGenerated);
%attribute(FdoDataPropertyDefinition, FdoInt32, Length, GetLength, SetLength);
%attribute(FdoDataPropertyDefinition, FdoBoolean, Nullable, GetNullable, SetNullable);
%attribute(FdoDataPropertyDefinition, FdoInt32, Precision, GetPrecision, SetPrecision);
%attribute(FdoDataPropertyDefinition, FdoBoolean, ReadOnly, GetReadOnly, SetReadOnly);
%attribute(FdoDataPropertyDefinition, FdoInt32, Scale, GetScale, SetScale);
//%attribute(FdoDataPropertyDefinition, FdoPropertyValueConstraint*, ValueConstraint, GetValueConstraint, SetValueConstraint);

//%attribute(FdoClassDefinition, FdoClassDefinition*, BaseClass, GetBaseClass, SetBaseClass);
//%attribute(FdoClassDefinition, FdoReadOnlyDataPropertyDefinitionCollection*, BaseIdentityProperties, GetBaseIdentityProperties);
//%attribute(FdoClassDefinition, FdoClassCapabilities*, Capabilities, GetCapabilities, SetCapabilities);
%attribute(FdoClassDefinition, FdoClassType, ClassType, GetClassType);
//%attribute(FdoClassDefinition, FdoReadOnlyDataPropertyDefinitionCollection*, IdentityProperties, GetIdentityProperties);
%attribute(FdoClassDefinition, FdoBoolean, IsAbstract, GetIsAbstract, SetIsAbstract);
%attribute(FdoClassDefinition, FdoBoolean, IsComputed, GetIsComputed, SetIsComputed);
//%attribute(FdoClassDefinition, FdoPropertyDefinitionCollection*, Properties, GetProperties);
//%attribute(FdoClassDefinition, FdoUniqueConstraintCollection*, UniqueConstraints, GetUniqueConstraints);

//%attribute(FdoAssociationPropertyDefinition, FdoClassDefinition*, AssociatedClass, GetAssociatedClass, SetAssociatedClass);
%attribute(FdoAssociationPropertyDefinition, FdoDeleteRule, DeleteRule, GetDeleteRule, SetDeleteRule);
//%attribute(FdoAssociationPropertyDefinition, FdoDataPropertyDefinitionCollection*, IdentityProperties, GetIdentityProperties);
%attribute(FdoAssociationPropertyDefinition, FdoBoolean, IsReadOnly, GetIsReadOnly, SetIsReadOnly);
%attribute(FdoAssociationPropertyDefinition, FdoBoolean, LockCascade, GetLockCascade, SetLockCascade);
//%attribute(FdoAssociationPropertyDefinition, FdoDataPropertyDefinitionCollection*, ReverseIdentityProperties, GetReverseIdentityProperties);

%attribute(FdoGeometricPropertyDefinition, FdoInt32, GeometryTypes, GetGeometryTypes, SetGeometryTypes);
%attribute(FdoGeometricPropertyDefinition, FdoBoolean, HasElevation, GetHasElevation, SetHasElevation);
%attribute(FdoGeometricPropertyDefinition, FdoBoolean, HasMeasure, GetHasMeasure, SetHasMeasure);
%attribute(FdoGeometricPropertyDefinition, FdoBoolean, ReadOnly, GetReadOnly, SetReadOnly);
//%attribute(FdoGeometricPropertyDefinition, FdoString*, SpatialContextAssociation, GetSpatialContextAssociation, SetSpatialContextAssociation);

%attribute(FdoRasterPropertyDefinition, FdoInt32, DefaultImageXSize, GetDefaultImageXSize, SetDefaultImageXSize);
%attribute(FdoRasterPropertyDefinition, FdoInt32, DefaultImageYSize, GetDefaultImageYSize, SetDefaultImageYSize);
%attribute(FdoRasterPropertyDefinition, FdoBoolean, Nullable, GetNullable, SetNullable);
%attribute(FdoRasterPropertyDefinition, FdoBoolean, ReadOnly, GetReadOnly, SetReadOnly);

%attribute(FdoExpression, FdoExpressionItemType, ExpressionType, GetExpressionType);

//%attribute(FdoBinaryExpression, FdoExpression*, LeftExpression, GetLeftExpression, SetLeftExpression);
//%attribute(FdoBinaryExpression, FdoExpression*, RightExpression, GetRightExpression, SetRightExpression);
%attribute(FdoBinaryExpression, FdoBinaryOperations, Operation, GetOperation, SetOperation);

%attribute(FdoLiteralValue, FdoLiteralValueType, LiteralValueType, GetLiteralValueType);

%attribute(FdoDataValue, FdoDataType, DataType, GetDataType);
//%attribute(FdoDataValue, FdoBoolean, IsNull, IsNull);

%attribute(FdoBooleanValue, FdoBoolean, Boolean, GetBoolean, SetBoolean);

%attribute(FdoByteValue, FdoByte, Byte, GetByte, SetByte);

%attribute(FdoDecimalValue, double, Decimal, GetDecimal, SetDecimal);

%attribute(FdoDoubleValue, double, Double, GetDouble, SetDouble);

%attribute(FdoInt16Value, FdoInt16, Int16, GetInt16, SetInt16);

%attribute(FdoInt32Value, FdoInt32, Int32, GetInt32, SetInt32);

%attribute(FdoInt64Value, FdoInt64, Int64, GetInt64, SetInt64);

%attribute(FdoSingleValue, float, Single, GetSingle, SetSingle);

//%attribute(FdoBinaryLogicalOperator, FdoFilter*, LeftOperand, GetLeftOperand, SetLeftOperand);
//%attribute(FdoBinaryLogicalOperator, FdoFilter*, RightOperand, GetRightOperand, SetRightOperand);
%attribute(FdoBinaryLogicalOperator, FdoBinaryLogicalOperations, Operation, GetOperation, SetOperation);

%attribute(FdoDistanceCondition, double, Distance, GetDistance, SetDistance);
%attribute(FdoDistanceCondition, FdoDistanceOperations, Operation, GetOperation, SetOperation);
//%attribute(FdoDistanceCondition, FdoExpression*, Geometry, GetGeometry, SetGeometry);

%attribute(FdoFunctionDefinition, FdoFunctionCategoryType, FunctionCategoryType, GetFunctionCategoryType);
%attribute(FdoFunctionDefinition, FdoPropertyType, ReturnPropertyType, GetReturnPropertyType);
%attribute(FdoFunctionDefinition, FdoDataType, ReturnType, GetReturnType);
//%attribute(FdoFunctionDefinition, FdoBoolean, IsAggregate, IsAggregate);
//%attribute(FdoFunctionDefinition, FdoBoolean, SupportsVariableArgumentsList, SupportsVariableArgumentsList);

%attribute(FdoIConnection, FdoConnectionState, ConnectionState, GetConnectionState);

%attribute(FdoIConnectionInfo, FdoProviderDatastoreType, ProviderDatastoreType, GetProviderDatastoreType);

%attribute(FdoIDataReader, FdoInt32, PropertyCount, GetPropertyCount);

%attribute(FdoIDataStoreReader, FdoBoolean, IsFdoEnabled, GetIsFdoEnabled);

%attribute(FdoIDirectPosition, double, X, GetX);
%attribute(FdoIDirectPosition, double, Y, GetY);
%attribute(FdoIDirectPosition, double, Z, GetZ);
%attribute(FdoIDirectPosition, double, M, GetM);
%attribute(FdoIDirectPosition, FdoInt32, Dimensionality, GetDimensionality);

%attribute(FdoIEnvelope, FdoBoolean, IsEmpty, GetIsEmpty);
%attribute(FdoIEnvelope, double, MinX, GetMinX);
%attribute(FdoIEnvelope, double, MaxX, GetMaxX);
%attribute(FdoIEnvelope, double, MinY, GetMinY);
%attribute(FdoIEnvelope, double, MaxY, GetMaxY);
%attribute(FdoIEnvelope, double, MinZ, GetMinZ);
%attribute(FdoIEnvelope, double, MaxZ, GetMaxZ);

%attribute(FdoIGeometry, FdoGeometryType, DerivedType, GetDerivedType);
%attribute(FdoIGeometry, FdoInt32, Dimensionality, GetDimensionality);

%attribute(FdoICurveAbstract, FdoBoolean, IsClosed, GetIsClosed);

%attribute(FdoICurveString, FdoInt32, Count, GetCount);

%attribute(FdoIGeometricAggregateAbstract, FdoInt32, Count, GetCount);

%attribute(FdoIPolygon, FdoInt32, InteriorRingCount, GetInteriorRingCount);

%attribute(FdoIRaster, FdoInt32, CurrentBand, GetCurrentBand, SetCurrentBand);
%attribute(FdoIRaster, FdoInt32, ImageXSize, GetImageXSize, SetImageXSize);
%attribute(FdoIRaster, FdoInt32, ImageYSize, GetImageYSize, SetImageYSize);
%attribute(FdoIRaster, FdoInt32, NumberOfBands, GetNumberOfBands, SetNumberOfBands);

%attribute(FdoISpatialContextReader, FdoSpatialContextExtentType, ExtentType, GetExtentType);
%attribute(FdoISpatialContextReader, double, XYTolerance, GetXYTolerance);
%attribute(FdoISpatialContextReader, double, ZTolerance, GetZTolerance);
%attribute(FdoISpatialContextReader, FdoBoolean, IsActive, IsActive);

%attribute(FdoJoinCriteria, FdoJoinType, JoinType, GetJoinType, SetJoinType);
%attribute(FdoJoinCriteria, FdoBoolean, HasAlias, HasAlias);

%attribute(FdoParameterValue, FdoParameterDirection, Direction, GetDirection, SetDirection);

%attribute(FdoProvider, FdoBoolean, IsManaged, GetIsManaged);

%attribute(FdoSignatureDefinition, FdoPropertyType, ReturnPropertyType, GetReturnPropertyType);
%attribute(FdoSignatureDefinition, FdoDataType, ReturnType, GetReturnType);

%attribute(FdoSpatialCondition, FdoSpatialOperations, Operation, GetOperation, SetOperation);

%attribute(FdoXmlSpatialContextReader, FdoSpatialContextExtentType, ExtentType, GetExtentType);
%attribute(FdoXmlSpatialContextReader, double, XYTolerance, GetXYTolerance);
%attribute(FdoXmlSpatialContextReader, double, ZTolerance, GetZTolerance);
%attribute(FdoXmlSpatialContextReader, FdoBoolean, IsActive, IsActive);

%attribute(FdoXmlSpatialContextWriter, FdoSpatialContextExtentType, ExtentType, GetExtentType, SetExtentType);
%attribute(FdoXmlSpatialContextWriter, double, XYTolerance, GetXYTolerance, SetXYTolerance);
%attribute(FdoXmlSpatialContextWriter, double, ZTolerance, GetZTolerance, SetZTolerance);